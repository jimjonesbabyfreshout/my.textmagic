const MONTHLY_PLAN_CHANGE_COMMAND='monthlyPlanChange';const DOWNGRADE_TO_PAYG_COMMAND='downgradeToPayg';var Billing=function(priceData,monthlyBillingPlansViewData,isAutoRechargeChangeStatusAllowed){var $this=this;$this.priceData=priceData;$this.monthlyBillingPlansViewData=monthlyBillingPlansViewData;$this.isAutoRechargeChangeStatusAllowed=isAutoRechargeChangeStatusAllowed;$this.init();this.addBillingModal.on('show.bs.modal',function(e){$this.initAddPaymentMethodBtn();});if(monthlyBillingPlansViewData){$this.initShowEditMonthlyBillingPlansBlock();$this.initHideEditMonthlyBillingPlansBlock();$this.initSelectMonthlyBillingPlanAction();$this.initChangeMonthlyBillingPlanAction();$this.initDowngradeToPaygAction();}};Billing.prototype.init=function(){this.billingAlert=$('#billing-alert');this.paymentMethodsAlert=$('#payment-methods-alert');this.rechargeInactivateAlert=$('.recharge-inactivate-alert');this.autorechargePriceLabel=$('[data-widget=autorechargePriceLabel]');this.autorechargeMinBalanceLabel=$('[data-widget=autorechargeMinBalanceLabel]');this.autorechargeStatusSelect=$('[data-widget=autorechargeStatusSelect]');this.autorechargePriceSelect=$('[data-widget=autorechargePriceSelect]');this.autorechargeMinBalanceSelect=$('[data-widget=autorechargeMinBalanceSelect]');this.activateAutorechargeBtn=$('[data-widget=activateAutorecharge]');this.editAutorechargeBtn=$('[data-widget=editAutorecharge]');this.cancelEditAutorechargeBtn=$('[data-widget=cancelEditAutorecharge]');this.saveAutorechargeSettingsBtn=$('[data-widget=saveAutorechargeSettings]');this.autorechargeInactiveBlock=$('.panel-recharge.recharge-inactive');this.autorechargeActiveBlock=$('.panel-recharge.recharge-active-show');this.autorechargeEditBlock=$('.panel-recharge.recharge-active-edit');this.paymentMethodsForm=$('#billingForm');this.paymentMethodsFormSelItem=$('#form_paymentMethod');this.paymentMethodsContainer=$('#payment-methods-content');this.addPaymentMethodBtn=$('[data-widget=addPaymentMethod]');this.editPaymentMethodBtn='[data-widget=editPaymentMethod]';this.editMonthlyBillingPlanBtn=$('[data-widget=editMonthlyBillingPlan]');this.monthlyBillingPlansBlock=$('[data-widget=monthlyBillingPlansBlock]');this.monthlyBillingPlansBlockCancelBtn=$('[data-widget=cancelEditMonthlyBillingPlan]');this.monthlyBillingPlansBlockSaveBtn=$('[data-widget=saveMonthlyBillingPlan]');this.planWarningBlock=$('[data-widget=plansWarningBlock]');this.downgradeToSmallerPlanModal=$('[data-widget=downgradeToSmallerPlanModal]');this.confirmPlanDowngradeBtn=$('a[data-widget=confirmPlanDowngrade]');this.downgradeToPaygBtn=$('[data-widget=downgradeToPayg]');this.downgradeToPaygModal=$('[data-widget=downgradeToPaygModal]');this.addBillingModal=$('#addBillingModal');this.confirmPaygDowngradeBtn=$('a[data-widget=confirmPaygDowngrade]');this.currentMonthlyBillingPlan=this.monthlyBillingPlansBlock.find('.billing-plans__item--active');this.commandUrl='/online/account/billing/ajax';};Billing.prototype.initShowEditMonthlyBillingPlansBlock=function(){let $this=this,$selectMonthlyBillingPlansButtons=$this.monthlyBillingPlansBlock.find('.btn'),$monthlyBillingPlansEditButtonsBlock=$this.monthlyBillingPlansBlockSaveBtn.closest('.panel-body');$this.editMonthlyBillingPlanBtn.click(function(){$selectMonthlyBillingPlansButtons.removeClass('js-hidden');$monthlyBillingPlansEditButtonsBlock.removeClass('js-hidden');});};Billing.prototype.initHideEditMonthlyBillingPlansBlock=function(){let $this=this;$this.monthlyBillingPlansBlockCancelBtn.click(function(){$this.hideEditMonthlyBillingPlansBlock();});};Billing.prototype.hideEditMonthlyBillingPlansBlock=function(){let $this=this,$selectMonthlyBillingPlansButtons=$this.monthlyBillingPlansBlock.find('.btn'),$monthlyBillingPlansEditButtonsBlock=$this.monthlyBillingPlansBlockSaveBtn.closest('.panel-body'),$selectedBillingPLan=$this.monthlyBillingPlansBlock.find('.billing-plans__item--active');$selectMonthlyBillingPlansButtons.addClass('js-hidden');$monthlyBillingPlansEditButtonsBlock.addClass('js-hidden');$this.planWarningBlock.addClass('js-hidden');$selectedBillingPLan.removeClass('billing-plans__item--active');$selectedBillingPLan.find('.btn').removeClass('disabled');$selectedBillingPLan.find('.btn label span').text('Select');$this.currentMonthlyBillingPlan.addClass('billing-plans__item--active');$this.currentMonthlyBillingPlan.find('label span').text('Selected');$this.currentMonthlyBillingPlan.find('.btn').addClass('disabled');$this.monthlyBillingPlansBlockSaveBtn.addClass('disabled');};Billing.prototype.initSelectMonthlyBillingPlanAction=function(){let $this=this;$this.monthlyBillingPlansBlock.find('.billing-plans__body .btn').click(function(){let $selectedBillingPLan=$(this).closest('.billing-plans__item'),$previousSelectedBillingPLan=$this.monthlyBillingPlansBlock.find('.billing-plans__item--active'),$selectedPlanId=$selectedBillingPLan.attr('data-plan-id'),$currentPlanId=$this.currentMonthlyBillingPlan.attr('data-plan-id'),$monthCostFormatted=$this.monthlyBillingPlansViewData[$selectedPlanId]['month_cost_formatted'],$selectedPlanCost=$this.monthlyBillingPlansViewData[$selectedPlanId]['month_cost'],$currentPlanCost=$this.monthlyBillingPlansViewData[$currentPlanId]['month_cost'];if($selectedPlanId===$currentPlanId){$this.monthlyBillingPlansBlockSaveBtn.addClass('disabled');$this.planWarningBlock.addClass('js-hidden');}else{$this.monthlyBillingPlansBlockSaveBtn.removeClass('disabled');if(parseInt($selectedPlanCost)>parseInt($currentPlanCost)){$this.showPlanWarning($monthCostFormatted);}else{$this.planWarningBlock.addClass('js-hidden');}}
$previousSelectedBillingPLan.removeClass('billing-plans__item--active');$previousSelectedBillingPLan.find('.btn').removeClass('disabled');$previousSelectedBillingPLan.find('.btn label span').text('Select');$selectedBillingPLan.addClass('billing-plans__item--active');$(this).find('label span').text('Selected');$(this).addClass('disabled');});};Billing.prototype.initChangeMonthlyBillingPlanAction=function(){let $this=this;$this.monthlyBillingPlansBlockSaveBtn.click(function(){let $selectedBillingPLan=$this.monthlyBillingPlansBlock.find('.billing-plans__item--active'),selectedBillingPlanId=$selectedBillingPLan.attr('data-plan-id'),currentBillingPlanId=$this.currentMonthlyBillingPlan.attr('data-plan-id');if($this.monthlyBillingPlansViewData[selectedBillingPlanId]['message_price']>$this.monthlyBillingPlansViewData[currentBillingPlanId]['message_price']){$this.showDowngradeToSmallerPlanModal(selectedBillingPlanId,currentBillingPlanId);$this.confirmPlanDowngradeBtn.one('click',function(){$this.changeMonthlyBillingPlan($selectedBillingPLan);});}else{$this.changeMonthlyBillingPlan($selectedBillingPLan);}});};Billing.prototype.changeMonthlyBillingPlan=function($selectedBillingPLan){let $this=this,selectedBillingPlanId=$selectedBillingPLan.attr('data-plan-id');$.ajax({url:$this.commandUrl,type:'POST',dataType:'JSON',data:{'cmd':MONTHLY_PLAN_CHANGE_COMMAND,'planId':selectedBillingPlanId},beforeSend:function(){$('body').spin('enable','<p class="h1">Processing your payment. Please wait...</p>',{'length':17,'width':4,'radius':14,'top':'-46px','left':'-24px'});$this.monthlyBillingPlansBlockSaveBtn.addClass('disabled');$this.hideAjaxAlert($this.billingAlert);},success:function(xhr){if(xhr.success){if(xhr.data.redirect){$(location).attr('href',xhr.data.redirect);}else{$('body').spin('disable');if(xhr.message&&xhr.message['alert']){$this.showAjaxAlert($this.billingAlert,'alert alert-success',xhr.message['alert']);}
$this.currentMonthlyBillingPlan.find('.billing-plans__badge').addClass('js-hidden');$selectedBillingPLan.find('.billing-plans__badge').removeClass('js-hidden');$this.currentMonthlyBillingPlan=$selectedBillingPLan;$this.hideEditMonthlyBillingPlansBlock();}}else{$('body').spin('disable');$this.hideEditMonthlyBillingPlansBlock();if(xhr.message['alert']){$this.showAjaxAlert($this.billingAlert,'alert alert-warning',xhr.message['alert']);}else{$this.showAjaxAlert($this.billingAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}}},error:function(){$('body').spin('disable');$this.showAjaxAlert($this.billingAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');$this.hideEditMonthlyBillingPlansBlock();}});};Billing.prototype.initDowngradeToPaygAction=function(){let $this=this;$this.downgradeToPaygBtn.click(function(){$this.showDowngradeToPaygModal();});$this.confirmPaygDowngradeBtn.on('click',function(){$.ajax({url:$this.commandUrl,type:'POST',dataType:'JSON',data:{'cmd':DOWNGRADE_TO_PAYG_COMMAND},beforeSend:function(){$('body').spin('enable','<p class="h1">Processing. Please wait...</p>',{'length':17,'width':4,'radius':14,'top':'-46px','left':'-24px'});$this.hideAjaxAlert($this.billingAlert);$this.downgradeToPaygBtn.addClass('disabled');},complete:function(){$this.downgradeToPaygBtn.removeClass('disabled');},success:function(xhr){if(xhr.success){location.reload();}else{if(xhr.message['alert']){$this.showAjaxAlert($this.billingAlert,'alert alert-warning',xhr.message['alert']);}else{$this.showAjaxAlert($this.billingAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}}},error:function(){$this.showAjaxAlert($this.billingAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}});});};Billing.prototype.showPlanWarning=function(planCost){let $this=this,text='By clicking “Save” I agree that my primary payment method will be changed immediately for the amount of '+planCost+'.';$this.planWarningBlock.find('.message').text(text);$this.planWarningBlock.removeClass('js-hidden');};Billing.prototype.showDowngradeToSmallerPlanModal=function(newBillingPlanId,oldBillingPlanId){let $this=this,$modalCheckboxes=$this.downgradeToSmallerPlanModal.find('.confirmModalCheckboxes input[type=checkbox]'),newDiscount=$this.monthlyBillingPlansViewData[newBillingPlanId]['message_profit'],oldDiscount=$this.monthlyBillingPlansViewData[oldBillingPlanId]['message_profit'],discountTextPattern='I understand that my discount will be <b>'+newDiscount+' per text</b> instead of my current discount of '+oldDiscount+' per text.',newCostText=$this.monthlyBillingPlansViewData[newBillingPlanId]['message_price_formatted']+' '+$this.monthlyBillingPlansViewData[newBillingPlanId]['plan_currency'],oldCostText=$this.monthlyBillingPlansViewData[oldBillingPlanId]['message_price_formatted']+' '+$this.monthlyBillingPlansViewData[oldBillingPlanId]['plan_currency'],costTextPattern='I understand that the price of sending one message will cost <b>'+newCostText+'</b> instead of my current '+oldCostText+'.';$this.downgradeToSmallerPlanModal.find('[for=confirm_modal_plan_checkbox_discount]').html(discountTextPattern);$this.downgradeToSmallerPlanModal.find('[for=confirm_modal_plan_checkbox_cost]').html(costTextPattern);$modalCheckboxes.change(function(){let allCheckboxesSet=true;$modalCheckboxes.each(function(key,$checkbox){let checkboxId=$($checkbox).attr('id'),$checkboxLabel=$this.downgradeToSmallerPlanModal.find('label[for='+checkboxId+']');if(!$checkboxLabel.hasClass('checked')){allCheckboxesSet=false;}});if(allCheckboxesSet){$this.confirmPlanDowngradeBtn.removeClass('disabled');}else{$this.confirmPlanDowngradeBtn.addClass('disabled');}});$this.downgradeToSmallerPlanModal.modal();}
Billing.prototype.showDowngradeToPaygModal=function(){let $this=this,currentBillingPlanId=$this.currentMonthlyBillingPlan.attr('data-plan-id'),$modalCheckboxes=$this.downgradeToPaygModal.find('.confirmModalCheckboxes input[type=checkbox]'),profit=$this.monthlyBillingPlansViewData[currentBillingPlanId]['message_profit'],discountTextPattern='I understand that I will lose the <b>'+profit+' discount</b> when sending texts.',newCostText=$this.monthlyBillingPlansViewData[currentBillingPlanId]['payg_message_price_formatted']+' '+$this.monthlyBillingPlansViewData[currentBillingPlanId]['plan_currency'],oldCostText=$this.monthlyBillingPlansViewData[currentBillingPlanId]['message_price_formatted']+' '+$this.monthlyBillingPlansViewData[currentBillingPlanId]['plan_currency'],costTextPattern='I understand that the price of sending one message will cost <b>'+newCostText+'</b> instead of my current '+oldCostText+'.';$this.downgradeToPaygModal.find('[for=confirm_modal_payg_checkbox_discount]').html(discountTextPattern);$this.downgradeToPaygModal.find('[for=confirm_modal_payg_checkbox_cost]').html(costTextPattern);$modalCheckboxes.change(function(){let allCheckboxesSet=true;$modalCheckboxes.each(function(key,$checkbox){let checkboxId=$($checkbox).attr('id'),$checkboxLabel=$this.downgradeToPaygModal.find('label[for='+checkboxId+']');if(!$checkboxLabel.hasClass('checked')){allCheckboxesSet=false;}});if(allCheckboxesSet){$this.confirmPaygDowngradeBtn.removeClass('disabled');}else{$this.confirmPaygDowngradeBtn.addClass('disabled');}});$this.downgradeToPaygModal.modal();}
Billing.prototype.renderAjaxErrors=function(errors){$.each(errors,function(key,value){key=(key.split('-').length>1?key.split('-')[1]:key);switch(key){case 'number':$('.ccjs-number-formatted').addClass('ccjs-error').closest('.form-group').addClass('has-error').find('.help-block.error').html(value);break;case 'verification_value':$('.ccjs-csc').closest('.form-group').addClass('has-error');break;case 'full_name':$('.ccjs-name').closest('.form-group').addClass('has-error');break;case 'month':$('.ccjs-expiration').addClass('ccjs-error');$('.ccjs-month').closest('.form-group').addClass('has-error');break;case 'year':$('.ccjs-expiration').addClass('ccjs-error');$('.ccjs-year').closest('.form-group').addClass('has-error');break;case 'alert':return true;break;default:$('[data-field='+key+']').parent('div').addClass('has-error').find('.help-block').html(value);}});};Billing.prototype.clearAjaxErrors=function(){$('.ccjs-card').find('.ccjs-error').removeClass('ccjs-error');$('.form-group').removeClass('has-error').find('.help-block').empty();}
Billing.prototype.showAjaxAlert=function(alert,cls,message){if(cls=='alert alert-success'){return alert.successBlock(message);}
alert.removeClass().addClass(cls).show().find('.message').html(message);};Billing.prototype.hideAjaxAlert=function(alert){alert.hide().removeClass().find('.message').html('');};Billing.prototype.activateAutorecharge=function(){this.showEditAutorecharge(this.autorechargeInactiveBlock);};Billing.prototype.saveAutorechargeSettingsConfirm=function(){var $this=this;if($this.autorechargeStatusSelect.val()=='0'){$.confirm({'title':'Are you sure that <br /> you wish to deactivate auto-recharge?','message':'If SMS communication is critical to your business <br /> we recommend keeping auto-recharge active.','buttons':{'cancel':{'text':'Cancel','class':'btn btn-default'},'deactivate':{'text':'Deactivate','class':'btn btn-danger','click':function(){$('#confirmModal').modal('hide');$this.saveAutorechargeSettings({'autorechargeFlag':'0'});}}}});}else{$this.saveAutorechargeSettings({'autorechargeFlag':'1','priceId':$this.autorechargePriceSelect.val(),'minBalance':$this.autorechargeMinBalanceSelect.val()});}}
Billing.prototype.showActiveAutorecharge=function(){this.autorechargeInactiveBlock.hide();this.autorechargeActiveBlock.show();if(this.monthlyBillingPlansViewData){this.activateAutorechargeBtn.hide();this.editAutorechargeBtn.show();}}
Billing.prototype.showInactiveAutorecharge=function(){this.autorechargeActiveBlock.hide();this.autorechargeInactiveBlock.show();if(this.monthlyBillingPlansViewData){this.editAutorechargeBtn.hide();this.activateAutorechargeBtn.show();}}
Billing.prototype.showEditAutorecharge=function(previousBlock){this.autorechargeStatusSelect.val('1');if(this.isAutoRechargeChangeStatusAllowed){this.rechargeInactivateAlert.hide();this.autorechargeStatusSelect.removeAttr('disabled');}else{this.rechargeInactivateAlert.show();this.autorechargeStatusSelect.attr('disabled','disabled');}
this.autorechargePriceSelect.removeAttr('disabled');this.autorechargeMinBalanceSelect.removeAttr('disabled');this.autorechargePreviousBlock=previousBlock;this.autorechargePreviousBlock.hide();this.autorechargeEditBlock.show();}
Billing.prototype.hideEditAutorecharge=function(){this.autorechargeEditBlock.hide();this.autorechargePreviousBlock.show();}
Billing.prototype.changeStatusEditAutorecharge=function(){switch(this.autorechargeStatusSelect.val()){case '0':this.autorechargePriceSelect.attr('disabled','disabled');this.autorechargeMinBalanceSelect.attr('disabled','disabled');break;case '1':this.autorechargePriceSelect.removeAttr('disabled');this.autorechargeMinBalanceSelect.removeAttr('disabled');break;}}
Billing.prototype.changeMinBalanceEditAutorecharge=function(value){var $this=this,$prices=[];$this.autorechargePriceSelect.find('option').remove();$.each($this.priceData.items,function(key,value){$prices.push({id:key,bundle:value.bundle,bundle_format:value.bundle_format});});$prices.sort(function(a,b){return a.bundle-b.bundle;});$.each($prices,function(key,value){if(value.bundle>$this.autorechargeMinBalanceSelect.val()){$this.autorechargePriceSelect.append($("<option></option>").attr("value",value.id).text(value.bundle_format));}});if(value&&$this.autorechargePriceSelect.find('option[value='+value+']').length>0){$this.autorechargePriceSelect.val(value);}}
Billing.prototype.saveAutorechargeSettings=function(data){var $this=this;data.cmd='autorechargeUpdate';$.ajax({url:$this.commandUrl,type:'POST',dataType:'JSON',data:data,beforeSend:function(){$this.hideAjaxAlert($this.billingAlert);$this.cancelEditAutorechargeBtn.hide();$this.autorechargeStatusSelect.attr('disabled','disabled');$this.autorechargePriceSelect.attr('disabled','disabled');$this.autorechargeMinBalanceSelect.attr('disabled','disabled');$this.autorechargeEditBlock.find('.btn-success').spin('enable','Saving...');},complete:function(xhr){$this.cancelEditAutorechargeBtn.show();$this.autorechargeStatusSelect.removeAttr('disabled');$this.autorechargePriceSelect.removeAttr('disabled');$this.autorechargeMinBalanceSelect.removeAttr('disabled');$this.autorechargeEditBlock.find('.btn-success').spin('disable');},success:function(xhr){$this.autorechargePriceLabel.text(xhr.data.price_label);$this.autorechargeMinBalanceLabel.text(xhr.data.min_balance_label);$this.isAutoRechargeChangeStatusAllowed=xhr.data.inactivate_allowed;$this.hideEditAutorecharge();switch(xhr.data.flag_label){case 'ACTIVE':$this.showActiveAutorecharge();break;case 'INACTIVE':$this.showInactiveAutorecharge();break;}
if(xhr.message['alert']){$this.showAjaxAlert($this.billingAlert,'alert'+' '+(xhr.success?'alert-success':'alert-warning'),xhr.message['alert']);}},error:function(xhr){$this.showAjaxAlert($this.billingAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}});}
Billing.prototype.paymentMethodsReload=function(){var $this=this;$this.paymentMethodsContainer.find('table:visible').spin('enable');$this.paymentMethodsContainer.load($this.paymentMethodsContainer.data('url'),{'cmd':'paymentMethodsTable'},function(){$this.paymentMethodsContainer.find('table:visible').spin('disable');$($this.editPaymentMethodBtn).on('click',function(e){e.preventDefault();var methodId=$(this).closest('tr').data('id');var methodLabel=$(this).closest('tr').data('label');var action=$(this).data('action');switch(action){case 'makePrimary':$this.makePrimaryPaymentMethodConfirm(methodId,methodLabel);break;case 'delete':$this.removePaymentMethodConfirm(methodId,methodLabel);break;}});});}
Billing.prototype.makePrimaryPaymentMethodConfirm=function(methodId,methodLabel){var $this=this;$.confirm({'title':'Make this payment method primary','message':'Payment method ('+methodLabel+') will be set as primary. Primary payment method will be charged first in case of future transactions. Are you sure you would like to do it?','buttons':{'cancel':{'text':'Cancel','class':'btn btn-default'},'remove':{'text':'Make primary','class':'btn btn-success','click':function(){$this.makePrimaryPaymentMethod(methodId);}}}});};Billing.prototype.makePrimaryPaymentMethod=function(methodId){var $this=this;$.ajax({url:$this.commandUrl,type:'POST',dataType:'JSON',data:{'cmd':'paymentMethodEdit','paymentMethodAction':'makePrimary','paymentMethod':methodId},beforeSend:function(){$this.hideAjaxAlert($this.paymentMethodsAlert);$('#confirmModal').find('.btn-success').spin('enable','Updating...');$('#confirmModal').find('.btn-default').hide();},complete:function(xhr){$('#confirmModal').modal('hide');},success:function(xhr){if(xhr.success){if(xhr.message['alert']){$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-success',xhr.message['alert']);}
if(xhr.data.redirect){$(location).attr('href',xhr.data.redirect);}else{$this.paymentMethodsReload();}}else{if(xhr.message['alert']){$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-warning',xhr.message['alert']);}else{$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}}},error:function(xhr){$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}});};Billing.prototype.removePaymentMethodConfirm=function(methodId,methodLabel){var $this=this;$.confirm({'title':'Delete payment method','message':($this.paymentMethodsContainer.find('table tr').length>=2?'Payment method ('+methodLabel+') will be deleted permanently. Are you sure you would like to delete it?':'Auto-recharge will no longer work if you remove all payment methods from your account. Are you sure you would like to delete it?'),'buttons':{'cancel':{'text':'Cancel','class':'btn btn-default'},'remove':{'text':'Delete','class':'btn btn-danger','click':function(){$this.removePaymentMethod(methodId);}}}});};Billing.prototype.removePaymentMethod=function(methodId){var $this=this;$.ajax({url:$this.commandUrl,type:'POST',dataType:'JSON',data:{'cmd':'paymentMethodEdit','paymentMethodAction':'delete','paymentMethod':methodId},beforeSend:function(){$this.hideAjaxAlert($this.paymentMethodsAlert);$('#confirmModal').find('.btn-danger').spin('enable','Deleting...');$('#confirmModal').find('.btn-default').hide();},complete:function(xhr){$('#confirmModal').modal('hide');},success:function(xhr){if(xhr.success){if(xhr.message['alert']){$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-success',xhr.message['alert']);}
if(xhr.data.redirect){$(location).attr('href',xhr.data.redirect);}else{if(xhr.data.flag_label){$this.autorechargePreviousBlock=$this.autorechargeActiveBlock;$this.isAutoRechargeChangeStatusAllowed=true;$this.hideEditAutorecharge();switch(xhr.data.flag_label){case 'ACTIVE':$this.showActiveAutorecharge();break;case 'INACTIVE':$this.showInactiveAutorecharge();break;}}
$this.paymentMethodsReload();}}else{if(xhr.message['alert']){$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-warning',xhr.message['alert']);}else{$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}}},error:function(xhr){$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}});};Billing.prototype.addPaymentMethod=function(methodId){var $this=this;$this.paymentMethodsFormSelItem.val(methodId);$paymentMethodModal=$('[data-id='+methodId+']').closest('.modal');var $data=this.paymentMethodsForm.serializeJSON();$.ajax({url:$this.commandUrl,type:'POST',dataType:'JSON',data:{'cmd':'paymentMethodAdd','form':$data.form},beforeSend:function(){$this.disablePaymentMethodModal($paymentMethodModal);},success:function(xhr){if(xhr.success){if(xhr.data.redirect){$(location).attr('href',xhr.data.redirect);}else if(xhr.data.gateway){$this.addMethodResponseCallback($paymentMethodModal,xhr.data);}else{$this.resetPaymentMethodModal($paymentMethodModal);if(xhr.message['alert']){$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-success',xhr.message['alert']);}
if(xhr.data.price_label){$this.autorechargePriceLabel.text(xhr.data.price_label);}
if(xhr.data.min_balance_label){$this.autorechargeMinBalanceLabel.text(xhr.data.min_balance_label);}
if(xhr.data.flag_label){$this.autorechargePreviousBlock=$this.autorechargeInactiveBlock;$this.isAutoRechargeChangeStatusAllowed=xhr.data.inactivate_allowed;$this.hideEditAutorecharge();switch(xhr.data.flag_label){case 'ACTIVE':$this.showActiveAutorecharge();break;case 'INACTIVE':$this.showInactiveAutorecharge();break;}}
$this.paymentMethodsReload();}}else{$this.enablePaymentMethodModal($paymentMethodModal);$this.renderAjaxErrors(xhr.message);if(xhr.message['alert']){$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-warning',xhr.message['alert']);$paymentMethodModal.modal('hide');}}},error:function(xhr){$this.resetPaymentMethodModal($paymentMethodModal);$this.showAjaxAlert($this.paymentMethodsAlert,'alert alert-warning','Sorry, but it looks like something has gone wrong. Please try again or contact us at support@textmagic.com.');}});}
Billing.prototype.initAddPaymentMethodBtn=function(){var $this=this;$this.addPaymentMethodBtn.off('click').on('click',function(e){e.preventDefault();$this.addPaymentMethod($(this).data('id'));});};Billing.prototype.disablePaymentMethodModal=function(modal){this.hideAjaxAlert(this.paymentMethodsAlert);modal.find(':button').attr('disabled','disabled');modal.find(':input').attr('disabled','disabled');modal.find('.btn-link').hide();modal.find('.btn-success').spin('enable',modal.find('.btn-success').data('spin-text'));this.clearAjaxErrors();};Billing.prototype.enablePaymentMethodModal=function(modal){modal.find(':button').removeAttr('disabled');modal.find(':input').removeAttr('disabled');modal.find('.btn-success').spin('disable');modal.find('.btn-link').show();};Billing.prototype.resetPaymentMethodModal=function(modal){this.enablePaymentMethodModal(modal);modal.modal('hide');modal.find(':input[type="text"]').each(function(){$(this).val('');});}
Billing.prototype.addMethodResponseCallback=function(modal,data){this.resetPaymentMethodModal(modal);};